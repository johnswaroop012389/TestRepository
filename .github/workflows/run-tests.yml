name: Run Java Tests

on:
  workflow_dispatch:
    inputs:
      run_target:
        description: 'Which test to run (both, test1, test2)'
        required: true
        default: 'both'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Maven Tests
        continue-on-error: true
        run: |
          echo "running tests for run_target=${{ github.event.inputs.run_target }}..."
          mvn test -Dsurefire.suiteXmlFiles=testng.xml -DrunTarget=${{ github.event.inputs.run_target }}

      - name: Print results.txt to GitHub Actions UI
        run: |
          echo "üìÑ Printing results.txt:"
          cat results.txt || echo "results.txt not found"
          echo "üìÅ Listing files in directory:"
          ls -la

      - name: Prepare reports folder with timestamp
        id: report-setup
        run: |
          CLASS_NAME=${{ github.event.inputs.run_target }}
          DATE=$(date +"%Y/%m/%d")
          TIME=$(date +"%H:%M:%S")
          REPORT_DIR="reports/${CLASS_NAME}_date[${DATE}]_time[${TIME}]"
          mkdir -p "$REPORT_DIR"

          if REPORT_FILE=$(find . -name emailable-report.html | head -n1); then
            NEW_REPORT="emailable-report_${CLASS_NAME}_date[${DATE}]_time[${TIME}].html"
            cp "$REPORT_FILE" "$REPORT_DIR/$NEW_REPORT"
          else
            echo "‚ö†Ô∏è emailable-report.html not found!"
          fi

          cp results.txt "$REPORT_DIR/results.txt" || echo "‚ö†Ô∏è results.txt not found"

          echo "report_dir=$REPORT_DIR" >> $GITHUB_OUTPUT

      - name: Upload results and report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: testng-report
          path: |
            reports/**/*
            results.txt

      - name: Generate top-level index.html for browser view
        run: |
          REPORTS_DIR="reports"
          INDEX_FILE="$REPORTS_DIR/index.html"
          echo "<!DOCTYPE html><html><head><meta charset='utf-8'><title>Test Reports</title></head><body><h2>Test Reports</h2><ul>" > "$INDEX_FILE"
    
          find "$REPORTS_DIR" -mindepth 2 -type f -name "*.html" | sort -r | while read -r report; do
            REL_PATH=$(realpath --relative-to="$REPORTS_DIR" "$report")
            echo "<li><a href=\"$REL_PATH\">$REL_PATH</a></li>" >> "$INDEX_FILE"
          done

          echo "</ul></body></html>" >> "$INDEX_FILE"

      - name: Push reports to gh-pages
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          git clone --depth=1 --branch gh-pages https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git gh-pages
          mkdir -p gh-pages/reports

          cp -r reports/* gh-pages/reports/

          # Prevent Jekyll from ignoring folders
          touch gh-pages/.nojekyll

          cd gh-pages
          git add .
          git commit -m "Update report pages at $(date +'%Y-%m-%d %H:%M:%S')" || echo "‚ö†Ô∏è Nothing new to commit"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git gh-pages
