name: Run Java Tests

on:
  workflow_dispatch:
    inputs:
      run_target:
        description: 'Which test to run (both, class1, class2)'
        required: true
        default: 'both'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Run Maven Tests
        continue-on-error: true
        run: |
          echo "running tests..."
          mvn test -Dsurefire.suiteXmlFiles=testng.xml -DrunTarget=${{ github.event.inputs.run_target }}

      - name: Print results.txt to GitHub Actions UI
        run: |
          echo "📄 Printing results.txt:"
          cat results.txt || echo "results.txt not found"
          echo "📁 Listing files in directory:"
          ls -la

      - name: Prepare report folder with timestamp
        id: report-setup
        run: |
          CLASS_NAME=${{ github.event.inputs.run_target }}
          TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
          REPORT_DIR="reports/${TIMESTAMP}"
          mkdir -p "$REPORT_DIR"

          # Rename and copy emailable-report.html
          REPORT=$(find . -name emailable-report.html | head -n 1)
          if [ -f "$REPORT" ]; then
            NEW_REPORT_NAME="emailable-report_${CLASS_NAME}_${TIMESTAMP}.html"
            cp "$REPORT" "$REPORT_DIR/$NEW_REPORT_NAME"
          else
            echo "⚠️ emailable-report.html not found!"
          fi

          # Copy results.txt to that folder (not used in gh-pages anymore)
          cp results.txt "$REPORT_DIR/results.txt" || echo "results.txt not found"

          # Set output so later steps can use timestamp
          echo "timestamp=$TIMESTAMP" >> $GITHUB_OUTPUT

      - name: Upload results and report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: testng-report
          path: |
            results.txt
            **/emailable-report*.html

      - name: Generate index.html for gh-pages
        run: |
          REPORTS_DIR=reports
          INDEX_FILE=$REPORTS_DIR/index.html
          echo "<html><head><title>Available Reports</title></head><body><h2>Test Reports</h2><ul>" > $INDEX_FILE
          for dir in $REPORTS_DIR/*/; do
            for report in "$dir"*.html; do
              if [ -f "$report" ]; then
                REPORT_NAME=$(basename "$report")
                REL_PATH="${dir#reports/}$REPORT_NAME"
                echo "<li><a href=\"$REL_PATH\">$REPORT_NAME</a></li>" >> $INDEX_FILE
              fi
            done
          done
          echo "</ul></body></html>" >> $INDEX_FILE

      - name: Push HTML reports to GitHub Pages
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git clone --branch gh-pages https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git gh-pages

          mkdir -p gh-pages/reports
          cp -r reports/* gh-pages/reports/

          cd gh-pages
          git add .
          git commit -m "Update reports at $(date)" || echo "No changes to commit"
          git push https://x-access-token:${GH_PAT}@github.com/${{ github.repository }}.git gh-pages
